<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace属性：指定当前mapper配置文件的唯一标识符
        如果是纯配置文件的方式，没有接口，值可以随便写
        如果是配置文件+接口的方式，值必须是对应接口的全名
-->
<mapper namespace="dao.UserDao">

    <!--
        insert：用来执行添加操作
            id：表示当前的方法名
                如果是纯配置文件的方式，没有接口，值可以随便写，但必须唯一
                如果是配置文件+接口的方式，值必须与接口中的方法名相同
            parameterType：表示方法的参数类型
                如果参数是对象，可以使用类的全名
                如果参数是普通数据，可以使用mybatis中的别名
            标签体：编写sql语句
                使用#{xxx}表示占位符
                如果参数是对象，则xxx为对象的属性名
                如果参数是普通数据，则xxx为参数名
    -->
    <insert id="insertUser" parameterType="User">
        insert into
            t_user
            (username, password, phone, address)
        values
            (#{username},#{password},#{phone},#{address})
    </insert>

    <!--
        useGeneratedKeys属性：设置保存时是否返回主键，取值有两个
            false：表示不返回主键
            true：表示返回主键，会自动将返回的主键绑定到参数对象的主键属性中
            keyProperty属性：指定对象的哪个属性为主键属性，即主键所映射的属性，必须指定
    -->
    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into
            t_user
            (username, password, phone, address)
        values
            (#{username},#{password},#{phone},#{address})
    </insert>

    <!--
        update：执行修改操作
    -->
    <update id="updateUser" parameterType="User">
        update t_user
        set username=#{username},
            password=#{password},
            phone=#{phone},
            address=#{address}
        where
            id=#{id}
    </update>
</mapper>